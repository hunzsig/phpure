<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2015/10/13
 * Time: 9:09
 */
namespace Finance\Model;

use Finance\Bean\WithdrawLogBean;
use Finance\Map\WithdrawLogType;

class WithdrawLogModel extends AbstractModel{

    /**
     * @return WithdrawLogBean
     */
    protected function getBean()
    {
        return parent::getBean(); // TODO: Change the autogenerated stub
    }

    /**
     * @param \library\Pgsql $model
     * @return \library\Pgsql
     */
    private function bindWhere($model)
    {
        $bean = $this->getBean();
        $model->whereTable('finance_withdraw_log');
        ($bean->getApplyId()) && $model->equalTo('apply_id',$bean->getApplyId());
        return $model;
    }

    /**
     * 获取列表
     * @return array|bool
     */
    public function getList(){
        $bean = $this->getBean();
        if(!$bean->getApplyId()) return $this->error('参数错误');
        //如果申请ID不属于该用户
        //$applyInfo = (new WithdrawModel())->getApplyInfoById($bean->getApplyId());
        $model = $this->db()->table('finance_withdraw_log');
        $model = $this->bindWhere($model);
        $model->orderBy('create_time','desc');
        if($bean->getPage()){
            $list = $model->page($bean->getPageCurrent(),$bean->getPagePer());
        }else{
            $list = $model->multi();
        }
        return $this->success($this->factoryData($list, function ($tempData){
            $WithdrawLogTypeMap = (new WithdrawLogType())->getKV();
            foreach ($tempData as $k => $v) {
                ($v['type']) && $tempData[$k]['type_label'] = $WithdrawLogTypeMap[$v['type']];
            }
        }));
    }

    /**
     * 创建日志
     * @param $bean WithdrawLogBean
     * @return bool|string
     */
    public function add__(WithdrawLogBean $bean){
        $data = array();
        $data['apply_id'] = $bean->getApplyId();
        $data['operator_id'] = $bean->getOperatorId();
        $data['apply_amount'] = $bean->getApplyAmount();
        $data['type'] = (int)$bean->getType();
        $data['wallet_id'] = $bean->getWalletId();
        $bean->getDescription() && $data['description'] = $bean->getDescription();
        $bean->getData()        && $data['data'] = $bean->getData();
        try{
            if(!$this->db()->table('finance_withdraw_log')->insert($data)){
                throw new \Exception($this->db()->getError());
            }
        }catch (\Exception $e){
            return $this->false($this->db()->getError());
        }
        return $this->db()->lastInsertId();
    }

    public function add(){
        if(!$result = $this->add__($this->getBean())){
            return $this->error($this->getFalseMsg());
        }
        return $this->success($result);
    }

}