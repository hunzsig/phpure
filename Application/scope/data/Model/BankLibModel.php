<?php
/**
 * 银行库
 * Created by PhpStorm.
 * Date: 2018/05/07
 */

namespace Data\Model;

use Common\Map\IsSure;
use Data\Bean\BankLibBean;

class BankLibModel extends AbstractModel
{

    /**
     * @return BankLibBean
     */
    protected function getBean()
    {
        return parent::getBean(); // TODO: Change the autogenerated stub
    }

    /**
     * @param \library\Mysql $model
     * @return \library\Mysql
     */
    private function bindWhere($model)
    {
        $bean = $this->getBean();
        $bean->getCode() && $model->equalTo('code', $bean->getCode());
        $bean->getName() && $model->like('name', "%" . $bean->getName() . "%");
        $bean->getPayCode() && $model->like('pay_code', "%" . $bean->getPayCode() . "%");
        $bean->getStatus() && $model->in('status', $bean->getStatus());
        return $model;
    }

    /**
     * 获取
     * @return array
     */
    public function getList()
    {
        $bean = $this->getBean();
        $model = $this->db()->table('data_bank_lib');
        $model = $this->bindWhere($model);
        $model->orderBy('ordering', 'desc')->orderBy('code');
        if ($bean->getPage()) {
            $result = $model->page($bean->getPageCurrent(), $bean->getPagePer());
        } else {
            $result = $model->multi();
        }
        return $this->success($result);
    }

    /**
     * 根据BankCode获取银行信息
     * @return bool|mixed|null
     */
    public function getInfoByBankCode()
    {
        $bankCode = $this->getBean()->getCode();
        if (!$bankCode) {
            return $this->error('缺少银行代码');
        }
        $result = $this->db()->table('data_bank_lib')->equalTo('code', $bankCode)->one();
        return $this->success($result);
    }

    /**
     * 获取
     * @return array
     */
    public function getListForMap__()
    {
        $result = $this->db()->table('data_bank_lib')->orderBy('code')->multi();
        return $result;
    }

    /**
     * 新增
     * @return array
     */
    public function add()
    {
        $bean = $this->getBean();
        if (!$bean->getCode()) return $this->error('缺少银行代码');
        if (!$bean->getName()) return $this->error('缺少银行名称');
        if ($this->db()->table('data_bank_lib')->equalTo('code', $bean->getCode())->one()) {
            return $this->error('此银行代码已注册');
        }
        $data = array();
        $data['code'] = $bean->getCode();
        $data['name'] = $bean->getName();
        $data['is_system'] = IsSure::no;
        ($bean->getIconSquare()) && $data['icon_square'] = $bean->getIconSquare();
        ($bean->getIconRectangle()) && $data['icon_rectangle'] = $bean->getIconRectangle();
        ($bean->getIconCircular()) && $data['icon_circular'] = $bean->getIconCircular();
        ($bean->getPayCode()) && $data['pay_code'] = $bean->getPayCode();
        is_numeric($bean->getOrdering()) && $data['ordering'] = $bean->getOrdering();
        try {
            if (!$this->db()->table('data_bank_lib')->insert($data)) {
                throw new \Exception($this->db()->lastInsertId());
            }
            $id = $this->db()->lastInsertId();
        } catch (\Exception $e) {
            return $this->error($this->db()->getError());
        }
        return $this->success($id);
    }

    /**
     * 更新
     * @return array
     */
    public function edit()
    {
        $bean = $this->getBean();
        if (!$bean->getCode()) return $this->error('缺少银行代码');
        if (!$bean->getName()) return $this->error('缺少银行名称');
        $data = array();
        $data['name'] = $bean->getName();
        ($bean->getIconSquare()) && $data['icon_square'] = $bean->getIconSquare();
        ($bean->getIconRectangle()) && $data['icon_rectangle'] = $bean->getIconRectangle();
        ($bean->getIconCircular()) && $data['icon_circular'] = $bean->getIconCircular();
        ($bean->getPayCode()) && $data['pay_code'] = $bean->getPayCode();
        is_numeric($bean->getOrdering()) && $data['ordering'] = $bean->getOrdering();
        try {
            $this->db()->table('data_bank_lib')->equalTo('code', $bean->getCode())->update($data);
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

    /**
     * 删除
     * @return mixed
     */
    public function del()
    {
        $bean = $this->getBean();
        if (!$bean->getCode()) return $this->error('参数丢失');
        $bankInfo = $this->db()->table('data_bank_lib')->equalTo('code', $bean->getCode())->one();
        if (!$bankInfo) {
            return $this->error('此银行代码未注册,删除失败');
        }
        try {
            $this->db()->table('data_bank_lib')->equalTo('code', $bean->getCode())->delete();
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }


}