<?php

namespace Assets\Model;

class CallLevelModel extends AbstractModel
{

    /**
     * @return \Assets\Bean\CallLevelBean
     */
    protected function getBean()
    {
        return parent::getBean(); // TODO: Change the autogenerated stub
    }

    /**
     * @param \library\Mysql $model
     * @return \library\Mysql
     */
    private function bindWhere($model)
    {
        $bean = $this->getBean();
        $bean->getLv() && $model->equalTo('lv', $bean->getLv());
        return $model;
    }

    /**
     * 获取列表
     * @return array
     */
    public function getList()
    {
        $bean = $this->getBean();
        $model = $this->db()->table('assets_call_level');
        $model = $this->bindWhere($model);
        if ($bean->getOrderBy()) {
            $model->orderByStr($bean->getOrderBy());
        } else {
            $model->orderBy('lv_as', 'asc');
            $model->orderBy('lv', 'asc');
        }
        if ($bean->getPage()) {
            $result = $model->page($bean->getPageCurrent(), $bean->getPagePer());
        } else {
            $result = $model->multi();
        }
        return $this->success($result);
    }

    /**
     * 根据ID获取信息
     * @return array
     */
    public function getInfo()
    {
        $model = $this->db()->table('assets_call_level');
        $result = $this->bindWhere($model)->one();
        return $this->success($result);
    }

    /**
     * 新增等级
     * @return array
     */
    public function insert()
    {
        $bean = $this->getBean();
        if (!$bean->getLv()) return $this->error('请填写等级名');
        if (!$bean->getLvAs()) return $this->error('请填写等级等价值');
        if (!$bean->getFileSizeUnit()) return $this->error('请选择文件大小单位');
        if (!$bean->getFileMaxTotalSize()) return $this->error('请填写可上传文件总大小');
        if (!$bean->getFileMaxSimpleSize()) return $this->error('请填写可上传单个文件大小');
        if (!$bean->getFileMaxQty()) return $this->error('请填写可上传单个文件数量');
        if (!$bean->getFileExt()) return $this->error('请选择可允许的文件后缀');
        $one = $this->db()->table('assets_call_level')->field('lv')->where(array('lv' => $bean->getLv()))->one();
        if ($one) {
            return $this->error('等级已存在');
        }
        $data = array();
        $data['lv'] = $bean->getLv();
        $data['lv_as'] = $bean->getLvAs();
        $bean->getLvDesc() && $data['lv_desc'] = $bean->getLvDesc();
        $data['file_size_unit'] = $bean->getFileSizeUnit();
        $data['file_max_total_size'] = $bean->getFileMaxTotalSize();
        $data['file_max_simple_size'] = $bean->getFileMaxSimpleSize();
        $data['file_max_qty'] = $bean->getFileMaxQty();
        $data['file_ext'] = $bean->getFileExt();
        try {
            if (!$this->db()->table('assets_call_level')->insert($data)) {
                throw new \Exception($this->db()->getError());
            }
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

    /**
     * 编辑等级
     * @return array
     */
    public function edit()
    {
        $bean = $this->getBean();
        if (!$bean->getLv()) return $this->error('参数错误');
        try {
            $data = array();
            $bean->getLvAs() && $data['lv_as'] = $bean->getLvAs();
            $bean->getLvDesc() && $data['lv_desc'] = $bean->getLvDesc();
            $bean->getFileSizeUnit() && $data['file_size_unit'] = $bean->getFileSizeUnit();
            $bean->getFileMaxTotalSize() && $data['file_max_total_size'] = $bean->getFileMaxTotalSize();
            $bean->getFileMaxSimpleSize() && $data['file_max_simple_size'] = $bean->getFileMaxSimpleSize();
            $bean->getFileMaxQty() && $data['file_max_qty'] = $bean->getFileMaxQty();
            $bean->getFileExt() && $data['file_ext'] = $bean->getFileExt();
            $data && $this->db()->table('assets_call_level')->equalTo('lv', $bean->getLv())->update($data);
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

    /**
     * 删除等级
     * @return array
     */
    public function del()
    {
        $bean = $this->getBean();
        if (!$bean->getLv()) return $this->error('参数丢失');
        try {
            $this->db()->table('assets_call_level')->in('lv', $bean->getLv())->delete();
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

}