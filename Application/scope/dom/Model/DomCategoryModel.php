<?php

namespace Dom\Model;

use Common\Map\IsEnable;

class DomCategoryModel extends AbstractModel
{

    /**
     * @return \Dom\Bean\DomCategoryBean
     */
    protected function getBean()
    {
        return parent::getBean(); // TODO: Change the autogenerated stub
    }

    /**
     * @param \library\Mysql $model
     * @return \library\Mysql $model
     */
    private function bindWhere($model)
    {
        $bean = $this->getBean();
        $bean->getKey() && $model->in('key', $bean->getKey());
        $bean->getStatus() && $model->in('status', $bean->getStatus());
        $bean->getName() && $model->like('name', "%" . $bean->getName() . "%");
        $bean->getDescription() && $model->like('description', "%" . $bean->getDescription() . "%");
        $bean->getPic() && $model->like('pic', "%" . $bean->getPic() . "%");
        return $model;
    }

    /**
     * 判断分类是否已经存在
     * @param $name
     * @param $key
     * @return bool
     */
    private function isExist($name, $key)
    {
        $one = $this->db()->table('dom_category')
            ->equalTo('name', $name)
            ->field('key')
            ->one();
        return ($one && $one['dom_category_key'] != $key) ? true : false;
    }

    /**
     * 获取列表
     * @return mixed|null
     */
    public function getList()
    {
        $bean = $this->getBean();
        $model = $this->db()->table('dom_category');
        $model = $this->bindWhere($model);
        if ($bean->getOrderBy()) {
            $model->orderByStr($bean->getOrderBy());
        } else {
            $model->orderBy('key', 'asc');
        }
        if ($bean->getPage()) {
            $result = $model->page($bean->getPageCurrent(), $bean->getPagePer());
        } else {
            $result = $model->multi();
        }
        $result = $this->factoryData($result, function ($tempData) {
            $isEnableMap = (new IsEnable())->getKV();
            foreach ($tempData as $k => $v) {
                ($v['status']) && $tempData[$k]['status_label'] = $isEnableMap[$v['status']];
            }
            return $tempData;
        });
        return $this->success($result);
    }

    /**
     * 获取分类信息
     * @return array
     */
    public function getInfo()
    {
        $model = $this->db()->table('dom_category');
        $model = $this->bindWhere($model);
        $info = $model->one();
        return $this->success($this->factoryData($info, function ($tempData) {
            $isEnableMap = (new IsEnable())->getKV();
            foreach ($tempData as $k => $v) {
                ($v['status']) && $tempData[$k]['status_label'] = $isEnableMap[$v['status']];
            }
            return $tempData;
        }));
    }

    /**
     * 创建分类
     * @return array
     */
    public function add()
    {
        $bean = $this->getBean();
        if (!$bean->getKey()) return $this->error('缺少分类KEY');
        if (!$bean->getName()) return $this->error('缺少分类名称');
        //分类存在判定
        if ($this->isExist($bean->getName(), 0)) {
            return $this->error('分类已存在，名称或者url标识相同。');
        }
        $data = array();
        $data['create_time'] = $this->db()->now();
        $data['key'] = $bean->getKey();
        $data['name'] = $bean->getName();
        $bean->getDescription() && $data['description'] = $bean->getDescription();
        $bean->getPic() && $data['pic'] = $bean->getPic();
        $bean->getStatus() && $data['status'] = $bean->getStatus();
        try {
            $this->db()->table('dom_category')->insert($data);
        } catch (\Exception $e) {
            return $this->error($this->db()->getError());
        }
        return $this->success();
    }

    /**
     * 编辑分类
     * @return array
     */
    public function edit()
    {
        $bean = $this->getBean();
        if (!$bean->getKey()) return $this->error('fail key');
        if (!$bean->getName()) return $this->error('缺少分类名称');
        //分类存在判定
        if ($this->isExist($bean->getName(), $bean->getKey())) {
            return $this->error('相同名称分类已存在');
        }
        $data = array();
        $data['update_time'] = $this->db()->now();
        $bean->getName() && $data['name'] = $bean->getName();
        $bean->getDescription() && $data['description'] = $bean->getDescription();
        $bean->getPic() && $data['pic'] = $bean->getPic();
        $bean->getStatus() && $data['status'] = $bean->getStatus();
        try {
            $this->db()->table('dom_category')->equalTo('key', $bean->getKey())->update($data);
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

    /**
     * 删除分类
     * @return array
     */
    public function del()
    {
        $bean = $this->getBean();
        if (!$bean->getKey()) {
            return $this->error('参数丢失');
        }
        try {
            if (!$this->db()->table('dom_category')->where(array('key' => $bean->getKey()))->delete()) {
                throw new \Exception($this->db()->getError());
            }
        } catch (\Exception $e) {
            $error = $e->getMessage();
            if (strpos($error, 'a foreign key constraint') !== false) {
                $error = '请先删除对应分类的文章！';
            }
            return $this->error($error);
        }
        return $this->success();
    }


}