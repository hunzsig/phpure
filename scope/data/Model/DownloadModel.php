<?php
/**
 * @date: 2017/01/31
 */

namespace Data\Model;

use Data\Bean\DownloadBean;

class DownloadModel extends AbstractModel
{

    /**
     * @return DownloadBean
     */
    protected function getBean()
    {
        return parent::getBean(); // TODO: Change the autogenerated stub
    }

    /**
     * @param \library\Mysql $model
     * @return \library\Mysql
     */
    private function bindWhere($model)
    {
        $bean = $this->getBean();
        $bean->getId() && $model->in('id', $bean->getId());
        $bean->getBelong() && $model->in('belong', $bean->getBelong());
        $bean->getName() && $model->like('name', "%" . $bean->getName() . "%");
        $bean->getIntroduce() && $model->like('introduce', "%" . $bean->getIntroduce() . "%");
        $bean->getDescription() && $model->like('description', "%" . $bean->getDescription() . "%");
        $bean->getVersion() && $model->like('version', "%" . $bean->getVersion() . "%");
        $bean->getSupport() && $model->like('support', "%" . $bean->getSupport() . "%");
        return $model;
    }

    /**
     * 获取列表
     * @return array
     */
    public function getList()
    {
        $bean = $this->getBean();
        $model = $this->db()->table('data_download');
        $model = $this->bindWhere($model);
        ($bean->getOrderBy()) && $model->orderByStr($bean->getOrderBy());
        $model->orderBy('update_time', 'desc');
        if ($bean->getPage()) {
            $result = $model->page($bean->getPageCurrent(), $bean->getPagePer());
        } else {
            $result = $model->multi();
        }
        return $this->success($this->factoryData($result, function ($tempData){
            foreach ($tempData as $k => $v) {
                $tempData[$k]['dl_qty'] = (int)$v['dl_qty'];
                if ($v['dl_link']) {
                    $dl_suffix = explode('.', $v['dl_link']);
                    $tempData[$k]['dl_suffix'] = array_pop($dl_suffix);
                }
            }
        }));
    }

    /**
     * @return array
     */
    public function getInfo()
    {
        $model = $this->db()->table('data_download');
        $model = $this->bindWhere($model);
        $result = $model->one();
        return $this->success($this->factoryData($result, function ($tempData){
            foreach ($tempData as $k => $v) {
                $tempData[$k]['dl_qty'] = (int)$v['dl_qty'];
                if ($v['dl_link']) {
                    $dl_suffix = explode('.', $v['dl_link']);
                    $tempData[$k]['dl_suffix'] = array_pop($dl_suffix);
                }
            }
        }));
    }

    /**
     * @return array
     */
    public function add()
    {
        $bean = $this->getBean();
        if (!$bean->getName()) return $this->error('请填写下载名称');
        if (!$bean->getBelong()) return $this->error('必须选择归类');
        try {
            $data = array();
            $data['name'] = $bean->getName();
            $data['belong'] = $bean->getBelong();
            $data['create_time'] = $this->getNowDateTime();
            $data['update_time'] = $this->getNowDateTime();
            $data['dl_qty'] = 0;
            ($bean->getIntroduce()) && $data['introduce'] = $bean->getIntroduce();
            ($bean->getDescription()) && $data['description'] = $bean->getDescription();
            ($bean->getPic()) && $data['pic'] = $bean->getPic();
            ($bean->getDlLink()) && $data['dl_link'] = $bean->getDlLink();
            ($bean->getVersion()) && $data['version'] = $bean->getVersion();
            ($bean->getSupport()) && $data['support'] = $bean->getSupport();
            if (!$this->db()->table('data_download')->insert($data)) {
                throw new \Exception($this->db()->getError());
            }
            $id = $this->db()->lastInsertId();
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success($id);
    }

    /**
     * @return array
     */
    public function edit()
    {
        $bean = $this->getBean();
        if (!$bean->getId()) return $this->error('参数错误');
        try {
            $data = array();
            $data['update_time'] = $this->getNowDateTime();
            ($bean->getBelong()) && $data['belong'] = $bean->getBelong();
            ($bean->getName()) && $data['name'] = $bean->getName();
            ($bean->getIntroduce()) && $data['introduce'] = $bean->getIntroduce();
            ($bean->getDescription()) && $data['description'] = $bean->getDescription();
            ($bean->getPic()) && $data['pic'] = $bean->getPic();
            ($bean->getDlLink()) && $data['dl_link'] = $bean->getDlLink();
            ($bean->getDlQty()) && $data['dl_qty'] = $bean->getDlQty();
            ($bean->getVersion()) && $data['version'] = $bean->getVersion();
            ($bean->getSupport()) && $data['support'] = $bean->getSupport();
            if ($data) {
                $this->db()->table('data_download')->equalTo('id', $bean->getId())->update($data);
            }
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

    /**
     * @return array
     */
    public function del()
    {
        $bean = $this->getBean();
        if (!$bean->getId()) return $this->error('参数错误');
        try {
            $this->db()->table('data_download')->equalTo('id', $bean->getId())->delete();
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

    /**
     * 下载
     * @return array
     */
    public function inc()
    {
        $bean = $this->getBean();
        if (!$bean->getId()) return $this->error('参数错误');
        $one = $this->db()->table('data_download')->field('id')->equalTo('id', $bean->getId())->one();
        if (!$one) {
            return $this->error('项不存在');
        } else {
            try{
                $data = array(
                    'dl_qty' => array('exp', '`dl_qty`+1'),
                    'dl_last_time' => $this->db()->now(),
                );
                $this->db()->table('data_download')->equalTo('id', $bean->getId())->update($data);
            }catch (\Exception $e){}
        }
        return $this->success();
    }

}