<?php
/**
 * Created by PhpStorm.
 * Date: 2018/03/20
 */

namespace Goods\Model;

use Common\Map\IsEnable;
use Goods\Map\GoodsEvaluate;

class GoodsEvaluationModel extends AbstractModel
{

    /**
     * @return \Goods\Bean\GoodsEvaluationBean
     */
    protected function getBean()
    {
        return parent::getBean(); // TODO: Change the autogenerated stub
    }

    private function getViewModel()
    {
        $table = $this->db()->table('goods_evaluation')
            ->join('goods_evaluation', 'goods_info as info', array('goods_id' => 'id'), 'LEFT')
            ->join('goods_evaluation', 'user_info', array('uid' => 'uid'), 'LEFT')
            ->field('*', 'goods_evaluation')
            ->field('pic,show_attr_name', 'info')
            ->field('nickname', 'user_info');
        return $table;
    }

    /**
     * @param \library\Pgsql $model
     * @return \library\Pgsql
     */
    private function bindWhere($model)
    {
        $bean = $this->getBean();
        $model->whereTable('goods_evaluation');
        if ($bean->getBaseGoodsId()) {
            $gi = $this->db()->table('goods_info')->field('id')->where(array('base_id' => $bean->getBaseGoodsId()))->multi();
            $goodsIds = array();
            foreach ($gi as $g) {
                $goodsIds[] = $g['id'];
            }
            if ($goodsIds) {
                $model->in('goods_id', $goodsIds);
            }
        }
        $model->notEqualTo('status', IsEnable::del);
        $bean->getId() && $model->equalTo('id', $bean->getId());
        $bean->getPrevId() && $model->equalTo('prev_id', $bean->getPrevId());
        $bean->getSellerUid() && $model->equalTo('seller_uid', $bean->getSellerUid());
        $bean->getGoodsId() && $model->equalTo('goods_id', $bean->getGoodsId());
        $bean->getEvaluate() && $model->equalTo('evaluate', $bean->getEvaluate());
        $bean->getStatus() && $model->equalTo('status', $bean->getStatus());
        $bean->getCreateTime() && $model->between('create_time', $bean->getCreateTime());
        $bean->getOrderNo() && $model->like('order_no', "%" . $bean->getOrderNo() . "%");
        return $model;
    }

    /**
     * 获取
     * @return array
     */
    public function getList()
    {
        $bean = $this->getBean();
        $model = $this->getViewModel();
        $model = $this->bindWhere($model);
        if ($bean->getOrderBy()) {
            $model->orderByStr($bean->getOrderBy());
        } else {
            $model->orderBy('create_time', 'desc');
        }
        if ($bean->getPage()) {
            $result = $model->page($bean->getPageCurrent(), $bean->getPagePer());
        } else {
            $result = $model->multi();
        }
        $result = $this->factoryData($result,function ($tempData){
            $statusMap = (new IsEnable())->getKV();
            foreach ($tempData as $k => $v) {
                $v['status'] && $tempData[$k]['status_label'] = $statusMap[$v['status']];
            }
        });
        return $this->success($result);
    }

    /**
     * 创建
     * @return array
     */
    public function add()
    {
        $bean = $this->getBean();
        if (!$bean->getAuthUid()) return $this->error('非法用户');
        if (!$bean->getSellerUid()) return $this->error('非法卖家');
        if (!$bean->getGoodsId()) return $this->error('非法商品');
        if (!$bean->getOrderId()) return $this->error('订单错误I');
        if (!$bean->getOrderNo()) return $this->error('订单错误N');
        if (!$bean->getEvaluate()) $bean->setEvaluate(GoodsEvaluate::positive);
        if (!$bean->getPoint()) $bean->setPoint(5.0);
        $data = array();
        $data['create_time'] = $this->getNowDateTime();
        $data['uid'] = $bean->getAuthUid();
        $data['seller_uid'] = $bean->getSellerUid();
        $data['goods_id'] = $bean->getGoodsId();
        $data['status'] = IsEnable::yes;
        $data['evaluate'] = $bean->getEvaluate();
        $data['point'] = round($bean->getPoint(), 2);
        $bean->getPrevId() && $data['prev_id'] = $bean->getPrevId();
        $bean->getComment() && $data['comment'] = $bean->getComment();
        try {
            if (!$id = $this->db()->table('goods_evaluation')->insert($data)) {
                throw new \Exception($this->db()->getError());
            }
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success($id);
    }

    /**
     * 修改
     * @return array
     */
    public function modify()
    {
        $bean = $this->getBean();
        if (!$bean->getId()) return $this->error('参数错误');
        $data = array();
        $data['change_time'] = $this->getNowDateTime();
        $bean->getEvaluate() && $data['evaluate'] = $bean->getEvaluate();
        $bean->getPoint() && $data['point'] = round($bean->getPoint(), 1);
        $bean->getComment() && $data['comment'] = $bean->getComment();
        $bean->getStatus() && $data['status'] = $bean->getStatus();
        try {
            $this->db()->table('goods_evaluation')->update($data, array());
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success($bean->getId());
    }

    /**
     * 根据ID删除
     * @return array
     */
    public function del()
    {
        $bean = $this->getBean();
        if (!$bean->getId()) return $this->error('参数错误');
        try {
            $this->db()->table('goods_evaluation')->equalTo('id', $bean->getId())->update(array('status' => IsEnable::del));
        } catch (\Exception $e) {
            return $this->error($e->getMessage());
        }
        return $this->success();
    }

}